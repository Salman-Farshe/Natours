.about{
    overflow: hidden;
    min-height: 100vh;
    background-color: $color-gray-light;
    margin-top: -15vh;
    padding-top: 5rem;
    padding-bottom: 15rem;
    // -15vh, because where the header clip path is finished.
    // height 95 vh,  clip path 80vh. so 95 - 80 = 15
    .heading-about{
        margin: 5rem auto; // to visible the heading
        font-size: 2rem;
        font-weight: 700;
        text-transform: uppercase;
        text-align: center;
        background-image: linear-gradient(to right, $color-light-green, $color-dark-green);
        -webkit-background-clip: text; // clip to the text, reverse
        color: transparent;

        letter-spacing: 0.2rem;
        transition: all 0.2s;
        
        &:hover{
            transform: skewY(2deg) skewX(15deg) scale(0.8);
        }
    }
    .about-content{
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        max-width: 100%;
        margin: 0rem auto;

        .text-contents{
            max-width: 50%;
            padding: 0.5rem 3rem;
            .text-content-heading{
                text-transform: uppercase;
                font-weight: 700;
                font-size: 1.4rem;
            }
            .text-content-paragraph{
                font-size: 1.1rem;
                margin-bottom: 3rem;
                &:not(:nth-child(2)){
                    margin-bottom: 1rem;
                }
            }
            
            .btn-about{
                float: right;
                margin-right: 3rem;
                margin-top: 1rem;

                &:link, &:visited{
                    color: $color-light-green;
                    display: inline-block;
                    text-decoration: none;
                    border: 1px solid $color-light-green;
                    border-radius: 1px solid $color-light-green;
                    font-size: 1.2rem;
                }
                &:hover{
                    background-color: $color-light-green;
                    color: $color-gray-light;
                    box-shadow: 0 1rem 2rem rgba($color: #000000, $alpha: 0.15);
                    transform: translateY(0.2rem);
                }
                &:active{
                    box-shadow: 0 0.5rem 1rem rgba($color: #000000, $alpha: 0.15);
                    transform: translateY(0);
                }
            }
        }
        .image-contents{
            max-width: 50%;
            padding: 0.5rem 3rem;
            .image-container{
                max-width: 100%;
                position: relative;
                img{
                    display: block;
                    width: 15rem;
                    height: 10rem;
                    margin: auto;

                    box-shadow: 0 1.5rem 4rem rgba($color: #000000, $alpha: 0.4);
                    border-radius: 0.3rem;
                    outline-offset: 1rem;
        
                    position: absolute;
                    z-index: 10;
                    transition: all 0.2s;
                    &.img-1{
                        top: 3rem;
                        left: 15rem;
                    }
                    &.img-2{
                        top: 0rem;
                        left: 5rem;
                        
                    }
                    &.img-3{
                        top: 8rem;
                        left: 10rem;
                    }
                    &:hover{
                        outline: 1rem solid $color-light-green;
                        transform: scale(1.3);
                        box-shadow: 0 2.5rem 4rem rgba($color: #000000, $alpha: 0.5);
                        z-index: 20;
                    }
                }
            }
        }
    }
}



.feature{
    min-height: 100vh;
    //On linear gradient, always use pure color directly. not a variable color.
    background-image: linear-gradient(          
        to right bottom, 
        #50ca3a, 
        #19a174), 
        url('../image/header-01.jpg');
    background-size: cover; // whatever width, it always try to fit on the screen.
    background-position: top; // top of the images always same. not cropping if we change the window size.
    //clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    margin-top: -5rem;
    padding: 10rem 5rem;
    
    display: grid;
    grid-template-columns: auto auto auto auto;
    grid-template-rows: auto;
    justify-content: space-evenly;
    grid-gap: 3rem;
    
    // instead of clip-path, use skew()
    transform: skewY(-7deg); 
    // direct child of the feature selector
    
    .feature-box{
        background-color: $color-gray-light;
        font-size: 1.2rem;
        text-align: center;
        padding: 1.2rem;
        border-radius: 0.3rem;
        box-shadow: 0 1.5rem 5rem rgba($color: #000000, $alpha: 0.15);
        
        transform: skewY(7deg);
        transition: transform 0.2s;
        &:hover{
            transform: translateY(-1.5rem) scale(1.03) skewY(7deg);
        }

        .feature-box-icon{
            margin-bottom: 1.5rem;
            display: inline-block;
            background-image: linear-gradient(to right, $color-light-green, $color-dark-green);
            -webkit-background-clip: text; // clip to the text, reverse
            color: transparent;
        }

        .feature-box-heading{
            font-size: 1.7rem;
            text-transform: uppercase;
            margin-bottom: 0.5rem;
        }

        .feature-box-text{
            font-weight: 300;
        }
    }
}


.tour{
    min-height: 100vh;
    background-color: $color-gray-light;
    padding: 7rem 0rem;
    margin-top: -5rem;

    .tour-heading{
        margin: 5rem auto; // to visible the heading
        font-size: 2rem;
        font-weight: 700;
        text-transform: uppercase;
        text-align: center;
        background-image: linear-gradient(to right, $color-light-green, $color-dark-green);
        -webkit-background-clip: text; // clip to the text, reverse
        color: transparent;

        letter-spacing: 0.2rem;
        transition: all 0.2s;
        
        &:hover{
            transform: skewY(2deg) skewX(15deg) scale(0.8);
        }
    }
    
    .tour-cards{
        display: grid;
        grid-template-columns: auto auto auto;
        grid-template-rows: auto;
        justify-content: space-evenly;
        .cards{
            width: 15rem;
            height: 25rem;
            // adding perspective property on the parent element
            //background-color: rgb(252, 203, 10);
            //perspective: 150rem;
            //-moz-perspective: 150rem;
            
            &__side{
                width: 100%;
                height: 100%;
                padding: 2rem;
                font-size: 2rem;
                color: black;
                //background-color: blue;
                text-align: center;
                position: relative;
                transition: all 3s ease;
                //transform-style: flat;
                transform-style: preserve-3d;
                // to see cards both sides
                // hidden extra spaces on width of 2 sides of card
                //backface-visibility: hidden;
                
                &--front, &--back{
                    position: absolute;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    width: 100%;
                    //padding: 2rem;
                    text-align: center;
                    border-radius: 0.5rem;
                    overflow: hidden;
                    box-shadow: 0 2rem 5rem rgba($color: #000000, $alpha: 0.15);
                }

                &--front{
                    background-color: $color-light;
                    //transform: rotateY(0.5turn);
                }
                &--back{
                    background-color: $color-light;
                    transform: rotateY(0.5turn);
                }
            }


            // Front side content /********************/ 
            &__image{
                width: 100%; // parent width
                height: 10rem;
                background-size: cover;
                background-blend-mode: screen;
                //clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
                &--1{
                    background-image: linear-gradient(to right, $color-light-green, $color-dark-green), url('../../image/about-01.jpg');
                }
                &--2{
                    background-image: linear-gradient(to right, $color-light-green, $color-dark-green), url('../../image/about-05.jpg');
                }
                &--3{
                    background-image: linear-gradient(to right, $color-light-green, $color-dark-green), url('../../image/about-04.jpg');
                }
            }
            &__heading{
                font-size: 1.3rem;
                font-weight: 700;
                color: $bodyColor;
                box-decoration-break: clone;
            }
            &__content{
                margin-top: 1.5rem;
                color: $bodyColor;
                font-weight: 300;
                ul{
                    padding-left: 0rem;
                    text-align: center;
                    li{
                        list-style: none;
                        font-size: 1rem;
                        line-height: 1.5;
                    }
                }
            }



            // back sides content /************************/
            &__back{
                height: 100%;
                color: $color-light;
                background-image: linear-gradient(to right, $color-light-green, $color-dark-green);
                background-size: cover;
                padding-top: 6rem;
            }
            &__text{
                font-size: 1rem;
            }
            &__price{
                font-size: 3rem;
            }
            &__button, .btn:link, .btn:visited{
                // position: absolute;
                // top: 55%;
                // left: 40%;
                background-color: $color-light;
                color: $bodyColor;
                text-transform: uppercase;
                text-decoration: none;
                padding: 0.5rem 1.5rem;
                border-radius: 5rem;
                transition: all 0.2s; // shorthand property
                
                //animation
                animation-name: bottom-to-top;
                animation-duration: 2s;
                animation-delay: 1s;
                animation-fill-mode: backwards; // animation start from the initial state at 0%
            }
        
            /* pseudo classes are special state of elemnts.
            style elements under special conditions.
            allow us to style certain parts of element 
            */
            .btn:hover{
                transform: translateY(-0.1rem); // transform property is cool for modern effect
                box-shadow: 0 0.5rem 1rem rgba($color: #000000, $alpha: 0.5);
            }
            .btn:active{
                transform: translateY(0);
                box-shadow: 0 0.3rem 0.5rem rgba($color: #000000, $alpha: 0.2);
                // right side, bottom side, how much blur, color
            }
            .cards__button, .cards__button::after{
                color: var(--dark-color);
                background-color: var(--light-color);
            }
        
            .btn::after{ // treated like a child of btn
                content: ""; // content property must be use
                display: inline-block;
                width: 100%;
                height: 100%;   // width,height of that button
                border-radius: 5rem;
        
                // behind the actual button
                position: absolute;
                top: 0;
                left: 0;
                z-index: -1; // vertical stacking order
                transition: all 0.2s;
            }
        
            // behind the button after hover
            .btn:hover::after{
                transform: scaleX(1.5) scaleY(1.8); // zooming elements
                opacity: 0;
            }
        }
        .cards:hover .cards__side{
            transform: rotateY(0.5turn);
        }
    }

    &__button{
        position: relative;
        margin-top: 5rem;
        .btn:link, .btn:visited{
            position: absolute;
            left: 42%;
            text-transform: uppercase;
            text-decoration: none;
            padding: 0.8rem 2rem;
            border-radius: 5rem;
            transition: all 0.2s; // shorthand property
            
            //animation
            animation-name: bottom-to-top;
            animation-duration: 2s;
            animation-delay: 1s;
            animation-fill-mode: backwards; // animation start from the initial state at 0%
        }
    
        /* pseudo classes are special state of elemnts.
        style elements under special conditions.
        allow us to style certain parts of element 
        */
        .btn:hover{
            transform: translateY(-0.1rem); // transform property is cool for modern effect
            box-shadow: 0 0.5rem 1rem rgba($color: #000000, $alpha: 0.5);
        }
        .btn:active{
            transform: translateY(0);
            box-shadow: 0 0.3rem 0.5rem rgba($color: #000000, $alpha: 0.2);
            // right side, bottom side, how much blur, color
        }
        .btn-white, .btn-white::after{
            color: $color-light;
            background-color: $color-light-green;
        }
    
        .btn::after{ // treated like a child of btn
            content: ""; // content property must be use
            display: inline-block;
            width: 100%;
            height: 100%;   // width,height of that button
            border-radius: 5rem;
    
            // behind the actual button
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1; // vertical stacking order
            transition: all 0.2s;
        }
    
        // behind the button after hover
        .btn:hover::after{
            transform: scaleX(1.5) scaleY(1.8); // zooming elements
            opacity: 0;
        }
    }
}


.story{
    min-height: 100vh;
    //background-color: $color-light;
    padding: 4rem;
    //margin-top: -5rem;
    position: relative;
    
    &__heading{
        margin: 0rem auto; // to visible the heading
        font-size: 2rem;
        font-weight: 700;
        text-transform: uppercase;
        text-align: center;
        background-image: linear-gradient(to right, $color-light-green, $color-dark-green);
        -webkit-background-clip: text; // clip to the text, reverse
        color: transparent;
        
        letter-spacing: 0.2rem;
        transition: all 0.2s;
        
        &:hover{
            transform: skewY(2deg) skewX(15deg) scale(0.8);
        }
    }
    
    // row section
    & .row{
        width: 70%;
        margin: 0 auto;
        box-shadow: 0 2rem 4rem rgba($color: #000000, $alpha: 0.1);
        border-radius: 0.3rem;
        display: grid;
        grid-template-columns: auto auto;
        justify-content: left;

        padding: 1rem;
        margin-top: 4rem;
        background-color: $color-light;
    }
    &__image{
        width: 8rem;
        height: 8rem;
        background-color: orangered;
        //border-radius: 50%;
        -webkit-shape-outside: circle(50% at 50% 50%);
        shape-outside: circle(50% at 50% 50%);
        -webkit-clip-path: circle(50% at 50% 50%);
        clip-path: circle(50% at 50% 50%);
        transform: translateX(0.3rem);

        background-image: url('../../image/about-01.jpg');
        background-size: cover;

        position: relative;
        transition: all 0.8s;

        .story__caption{
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, 20%);
            text-align: center;
            text-transform: uppercase;
            color: $color-light;
            opacity: 0;
            transition: all 0.8s;
            backface-visibility: hidden; // stop shaking after transform occurs
        }

        &:hover{
            //filter: blur(0.2rem);
            opacity: 0.5;
        }

        &:hover{
            .story__caption{
                opacity: 1;
                transform: translate(-50%, -50%);
                filter: blur(0) brightness(100%);
            }
        }
    }

    &__button{
        position: relative;
        margin-top: 5rem;
        .btn:link, .btn:visited{
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-transform: uppercase;
            text-decoration: none;
            padding: 0.8rem 2rem;
            border-radius: 5rem;
            transition: all 0.2s; // shorthand property
            
            //animation
            animation-name: bottom-to-top;
            animation-duration: 2s;
            animation-delay: 1s;
            animation-fill-mode: backwards; // animation start from the initial state at 0%
        }
    
        /* pseudo classes are special state of elemnts.
        style elements under special conditions.
        allow us to style certain parts of element 
        */
        .btn:hover{
            //transform: translateY(-0.1rem); // transform property is cool for modern effect
            box-shadow: 0 0.5rem 1rem rgba($color: #000000, $alpha: 0.5);
        }
        .btn:active{
            transform: translateY(0);
            box-shadow: 0 0.3rem 0.5rem rgba($color: #000000, $alpha: 0.2);
            // right side, bottom side, how much blur, color
        }
        .btn-white, .btn-white::after{
            color: $color-light;
            background-color: $color-light-green;
        }
    
        .btn::after{ // treated like a child of btn
            content: ""; // content property must be use
            display: inline-block;
            width: 100%;
            height: 100%;   // width,height of that button
            border-radius: 5rem;
    
            // behind the actual button
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1; // vertical stacking order
            transition: all 0.2s;
        }
    
        // behind the button after hover
        .btn:hover::after{
            transform: scaleX(1.5) scaleY(1.8); // zooming elements
            opacity: 0;
        }
    }

    // background video section
    &__video{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -2;
        opacity: 0.7;
        & video{
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    }

    // story__text section
    &__text{
        transform: translateX(1.2rem);
    }
}


.booking{
    min-height: 100vh;
    background-image: linear-gradient(          
        to right bottom, 
        #50ca3a, 
        #19a174);
    background-size: cover; // whatever width, it always try to fit on the screen.
    background-position: top; // top of the images always same. not cropping if we change the window size.
    //clip-path: polygon(0 0, 100% 0, 100% 100vh, 0 100%);
    /* Clip out any part of the images or elements. specify a polygon in which images/elements.
    polygon is a bunch of coordinates. it's move from left-top corner, then right-top, right-bottom, left bottom. 
    As a clock wise...
    */
    padding: 10rem;

    &__book{
        height: 30rem;
        background-image: linear-gradient(110deg, 
                                            rgba($color-light, 1) 0%,
                                            rgba($color-light, 1) 50%,
                                            transparent 50%), 
                                            url('../../image/about-04.jpg');
        //cover / 100% both work same...
        //background-size: cover;
        background-size: 100%;
        border-radius: 0.5rem;
        box-shadow: 0 2rem 4rem rgba($color: #000000, $alpha: 0.2);

        &__form{
            width: 50%;
            padding: 2rem;
        }
    }

    .form{
        // form heading section
        .form__heading{
            margin: 0rem auto; // to visible the heading
            font-size: 2rem;
            font-weight: 700;
            text-transform: uppercase;
            text-align: center;
            background-image: linear-gradient(to right, $color-light-green, $color-dark-green);
            -webkit-background-clip: text; // clip to the text, reverse
            color: transparent;
            
            letter-spacing: 0.2rem;
            transition: all 0.2s;
            margin-bottom: 2rem;
            
            &:hover{
                transform: skewY(2deg) skewX(15deg) scale(0.8);
            }
        }

        .form-group{
            & :not(:last-child){
                margin-bottom: 1.2rem;
            }
            input{
                width: 80%;
                display: block;
                // inherit from parents directly
                font-family: inherit;
                color: inherit;
                font-size: 1.2rem;
                padding: 0.5rem;
                border-radius: 0.3rem;
                background-color: rgba($color-light, 0.5);
                border: none;
                border-bottom: 3px solid transparent;

                &:focus{
                    outline: none;
                    box-shadow: 0rem 1rem 1.5rem rgba($color: #000000, $alpha: 0.1);
                    border-bottom: 3px solid $color-light-green;
                }
                // check valid or not
                &:focus:invalid{
                    border-bottom: 3px solid orangered;
                }
                &::-webkit-input-placeholder{
                    color: $color-placeholder;
                }
            }
            label{
                font-size: 1rem;
                font-weight: 700;
                display: block;
                margin-left: 0.4rem;
                color: inherit;
                transition: all 0.3s;
            }

            input:placeholder-shown + label{
                opacity: 0;
                visibility: hidden;
                transform: translateY(-4rem);
            }
        } 
    }
}