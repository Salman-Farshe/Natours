.booking{
    .form{
        // form heading section
        .form__heading{
            margin: 0rem auto; // to visible the heading
            font-size: 2rem;
            font-weight: 700;
            text-transform: uppercase;
            text-align: center;
            background-image: linear-gradient(to right, $color-light-green, $color-dark-green);
            -webkit-background-clip: text; // clip to the text, reverse
            color: transparent;
            
            letter-spacing: 0.2rem;
            transition: all 0.2s;
            margin-bottom: 2rem;
            
            &:hover{
                transform: skewY(2deg) skewX(15deg) scale(0.8);
            }
        }

        .form-group{
            & :not(:last-child){
                margin-bottom: 1.2rem;
            }
            input{
                width: 80%;
                display: block;
                // inherit from parents directly
                font-family: inherit;
                color: inherit;
                font-size: 1.2rem;
                padding: 0.5rem;
                border-radius: 0.3rem;
                background-color: rgba($color-light, 0.5);
                border: none;
                border-bottom: 3px solid transparent;

                &:focus{
                    outline: none;
                    box-shadow: 0rem 1rem 1.5rem rgba($color: #000000, $alpha: 0.1);
                    border-bottom: 3px solid $color-light-green;
                }
                // check valid or not
                &:focus:invalid{
                    border-bottom: 3px solid orangered;
                }
                &::-webkit-input-placeholder{
                    color: $color-placeholder;
                }
            }
            .mylevel{
                font-size: 1rem;
                font-weight: 700;
                display: block;
                margin-left: 0.4rem;
                color: inherit;
                transition: all 0.3s;
            }

            input:placeholder-shown + label{
                opacity: 0;
                visibility: hidden;
                transform: translateY(-4rem);
            }

            // radio button
            &__radio{
                display: inline-block;
                width: 48%;

                input{
                    display: none;
                }

                label{
                    cursor: pointer;
                    transition: all 0.1s;
                    .my__radio{
                        display: inline-block;
                        width: 1.5rem;
                        height: 1.5rem;
                        border: 0.3rem solid $color-light-green;
                        border-radius: 50%;
                        transform: translateY(0.3rem);

                    }
                    &:hover, &:active{
                        .my__radio{
                            background-color: $color-light-green;
                        }
                    }
                }
            }
        }

        // form button
        &__button{
            position: relative;
            margin: 3rem auto;
            .btn:link, .btn:visited{
                position: absolute;
                top: 50%;
                left: 0%;
                //transform: translate(-50%, -70%);
                text-transform: uppercase;
                text-decoration: none;
                padding: 0.5rem 1.8rem;
                border-radius: 3rem;
                //border: none;
                transition: all 0.2s; // shorthand property
                
                //animation
                animation-name: bottom-to-top;
                animation-duration: 2s;
                animation-delay: 1s;
                animation-fill-mode: backwards; // animation start from the initial state at 0%
            }
        
            /* pseudo classes are special state of elemnts.
            style elements under special conditions.
            allow us to style certain parts of element 
            */
            .btn:hover{
                //transform: translateY(-0.1rem); // transform property is cool for modern effect
                box-shadow: 0 0.5rem 1rem rgba($color: #000000, $alpha: 0.5);
            }
            .btn:active{
                transform: translateY(0);
                box-shadow: 0 0.3rem 0.5rem rgba($color: #000000, $alpha: 0.2);
                // right side, bottom side, how much blur, color
            }
            .btn-green, .btn-green::after{
                color: $color-light;
                background-color: $color-light-green;
            }
        
            .btn::after{ // treated like a child of btn
                content: ""; // content property must be use
                display: inline-block;
                width: 100%;
                height: 100%;   // width,height of that button
                border-radius: 5rem;
        
                // behind the actual button
                position: absolute;
                top: 0;
                left: 0;
                z-index: -1; // vertical stacking order
                transition: all 0.2s;
            }
        
            // behind the button after hover
            .btn:hover::after{
                transform: scaleX(1.5) scaleY(1.8); // zooming elements
                opacity: 0;
            }
        }
    }
}